#!/usr/bin/env ruby
# frozen_string_literal: true

puts '== Installing dependencies =='
system 'gem install bundler --conservative'
system('bundle check') || system('bundle install')

require 'sqlite3'
require 'colorize'

puts "\n== Cheking if database exist =="

if File.exist?('db/database.db')
  puts "\n== Database already exist, you can start searchs :) =="
else
  puts "\n== Preparing database: Create Tables =="
  begin
      federative_csv = File.readlines(Dir.pwd + '/data/new_federatives.csv')
      counties_csv = File.readlines(Dir.pwd + '/data/new_counties.csv')
      population_csv = File.readlines(Dir.pwd + '/data/population.csv')

      db = SQLite3::Database.open 'db/database.db'
      db.execute <<-SQL
      CREATE TABLE Federatives(
        Status varchar(2),
        Code int,
        Title varchar(30),
        Population int
      );
      SQL

      db.execute <<-SQL
      CREATE TABLE Counties(
        Status varchar(2),
        Code int,
        Title varchar(30),
        Population int,
        UF varchar(2)
     );
      SQL

      db.execute <<-SQL
      CREATE TABLE Population(
        Year int,
        Amount int
     );
      SQL

      federative_csv.each do |dados|
        dados = dados.split(',')
        db.execute 'INSERT INTO Federatives VALUES ( ?, ?, ?, ? )', dados
      end

      puts "\n== Table Federative was build with success ==".green

      counties_csv.each do |dados|
        dados = dados.split(',')
        db.execute 'INSERT INTO Counties VALUES ( ?, ?, ?, ?, ? )', dados
      end

      puts "\n== Table Counties was build with success ==".green

      population_csv.each do |dados|
        dados = dados.split(',')
        db.execute 'INSERT INTO Population VALUES ( ?, ? )', dados
      end

      puts "\n== Table Population was build with success ==".green
  rescue SQLite3::Exception => e
    puts e
  ensure
    puts "\n== We finish to preparate database :) =="
    db&.close
    end
end
